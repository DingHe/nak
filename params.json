{"tagline":"The Nak Machine Learning Library","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Nak","google":"","body":"# Nak\r\n\r\nAuthor: **Jason Baldridge** (jasonbaldridge@gmail.com)\r\n\r\n## Introduction\r\n\r\nNak is a library for machine learning and related tasks. It is formed from the OpenNLP Maxent package, and my intent is to evolve it as a Scala library with further capabilities. It will be developed in particular with the natural language processing library [Chalk](https://github.com/jasonbaldridge/chalk) in mind.\r\n\r\nLike Chalk, the name Nak comes from one of my son's stuffed elephants. (He really likes elephants.)\r\n\r\n## Using Nak\r\n\r\nThe latest stable release is 1.0, which corresponds quite directly to the Maxent part of Apache OpenNLP v1.5.3. \r\n\r\nIn SBT:\r\n\r\n    libraryDependencies += \"com.jasonbaldridge\" % \"nak\" % \"1.0\"\r\n\r\nIn Maven:\r\n\r\n    <dependency>\r\n       <groupId>com.jasonbaldridge</groupId>\r\n       <artifactId>nak</artifactId>\r\n       <version>1.0</version>\r\n    </dependency>\r\n\r\n## Requirements\r\n\r\n* Version 1.6 of the Java 2 SDK (http://java.sun.com)\r\n\r\n## Configuring your environment variables\r\n\r\nThe easiest thing to do is to set the environment variables `JAVA_HOME`\r\nand `NAK_DIR` to the relevant locations on your system. Set `JAVA_HOME`\r\nto match the top level directory containing the Java installation you\r\nwant to use.\r\n\r\nNext, add the directory `NAK_DIR/bin` to your path. For example, you\r\ncan set the path in your `.bashrc` file as follows:\r\n\r\n\texport PATH=$PATH:$NAK_DIR/bin\r\n\r\nOnce you have taken care of these three things, you should be able to\r\nbuild and use Nak.\r\n\r\n\r\n## Building the system from source\r\n\r\nNak uses SBT (Simple Build Tool) with a standard directory\r\nstructure.  To build Nak, type (in the `$NAK_DIR` directory):\r\n\r\n\t$ ./build update compile\r\n\r\nThis will compile the source files and put them in\r\n`./target/classes`. If this is your first time running it, you will see\r\nmessages about Scala being downloaded -- this is fine and\r\nexpected. Once that is over, the Nak code will be compiled.\r\n\r\nTo try out other build targets, do:\r\n\r\n\t$ ./build\r\n\r\nThis will drop you into the SBT interface. To see the actions that are\r\npossible, hit the TAB key. (In general, you can do auto-completion on\r\nany command prefix in SBT, hurrah!)\r\n\r\nTo make sure all the tests pass, do:\r\n\r\n\t$ ./build test\r\n\r\nDocumentation for SBT is at <http://www.scala-sbt.org/>\r\n\r\nNote: if you have SBT already installed on your system, you can\r\nalso just call it directly with \"sbt\" in `NAK_DIR`.\r\n\r\n\r\n# Questions or suggestions?\r\n\r\nEmail Jason Baldridge: <jasonbaldridge@gmail.com>\r\n\r\nOr, create an issue: <https://github.com/jasonbaldridge/nak/issues>\r\n\r\n\r\n"}